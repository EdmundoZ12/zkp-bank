from "hashes/sha256/sha256" import main as sha256;

def main(
    private u32 cedula,
    private u32 fecha_nacimiento,
    private u32 codigo_secreto,
    u32[8] expected_cedula_hash,
    u32[8] expected_fecha_hash,
    u32[8] expected_codigo_hash
) -> field {
    // Convertir u32 a u32[16] arrays para SHA256
    u32[16] mut cedula_input = [0; 16];
    u32[16] mut fecha_input = [0; 16];
    u32[16] mut codigo_input = [0; 16];
    
    // Poner el número en la última posición
    cedula_input[15] = cedula;
    fecha_input[15] = fecha_nacimiento;
    codigo_input[15] = codigo_secreto;
    
    // Calcular hashes SHA256
    u32[8] computed_cedula = sha256([cedula_input]);
    u32[8] computed_fecha = sha256([fecha_input]);
    u32[8] computed_codigo = sha256([codigo_input]);
    
    // Comparar hashes (comparar cada u32)
    field mut cedula_match = 1;
    field mut fecha_match = 1;
    field mut codigo_match = 1;
    
    for u32 i in 0..8 {
        cedula_match = cedula_match * (computed_cedula[i] == expected_cedula_hash[i] ? 1 : 0);
        fecha_match = fecha_match * (computed_fecha[i] == expected_fecha_hash[i] ? 1 : 0);
        codigo_match = codigo_match * (computed_codigo[i] == expected_codigo_hash[i] ? 1 : 0);
    }
    
    return cedula_match * fecha_match * codigo_match;
}